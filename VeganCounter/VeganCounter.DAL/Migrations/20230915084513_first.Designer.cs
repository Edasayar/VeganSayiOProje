// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VeganCounter.DAL.Concrete.Context;

#nullable disable

namespace VeganCounter.DAL.Migrations
{
    [DbContext(typeof(VeganCounterDbContext))]
    [Migration("20230915084513_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AddedFoodUser", b =>
                {
                    b.Property<int>("AddedFoodsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("AddedFoodsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("UserAddedFoods", (string)null);
                });

            modelBuilder.Entity("FoodMeal", b =>
                {
                    b.Property<int>("FoodsId")
                        .HasColumnType("int");

                    b.Property<int>("MealsId")
                        .HasColumnType("int");

                    b.HasKey("FoodsId", "MealsId");

                    b.HasIndex("MealsId");

                    b.ToTable("MealFoods", (string)null);
                });

            modelBuilder.Entity("MealUser", b =>
                {
                    b.Property<int>("MealsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("MealsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("UserMeals", (string)null);
                });

            modelBuilder.Entity("VeganCounter.Entities.AddedFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("CalculatedCarbo")
                        .HasColumnType("float");

                    b.Property<double>("CalculatedFat")
                        .HasColumnType("float");

                    b.Property<double>("CalculatedKcal")
                        .HasColumnType("float");

                    b.Property<double>("CalculatedProtein")
                        .HasColumnType("float");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FoodID")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AddedFoods");
                });

            modelBuilder.Entity("VeganCounter.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FoodId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Yemek",
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9433),
                            State = "Created"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Şarküteri",
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9434),
                            State = "Created"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Sebze",
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9435),
                            State = "Created"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Meyve",
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9436),
                            State = "Created"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "İçecek",
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9436),
                            State = "Created"
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Salata",
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9437),
                            State = "Created"
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Tatlı",
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9438),
                            State = "Created"
                        });
                });

            modelBuilder.Entity("VeganCounter.Entities.DailyMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DailyMessages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 798, DateTimeKind.Local).AddTicks(179),
                            MessageText = "Mesaj 1",
                            State = "Created"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 798, DateTimeKind.Local).AddTicks(180),
                            MessageText = "Mesaj 2",
                            State = "Created"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 798, DateTimeKind.Local).AddTicks(181),
                            MessageText = "Mesaj 3",
                            State = "Created"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 798, DateTimeKind.Local).AddTicks(181),
                            MessageText = "Mesaj 4",
                            State = "Created"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 798, DateTimeKind.Local).AddTicks(182),
                            MessageText = "Mesaj 5",
                            State = "Created"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 798, DateTimeKind.Local).AddTicks(183),
                            MessageText = "Mesaj 6",
                            State = "Created"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 798, DateTimeKind.Local).AddTicks(184),
                            MessageText = "Mesaj 7",
                            State = "Created"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 798, DateTimeKind.Local).AddTicks(184),
                            MessageText = "Mesaj 8",
                            State = "Created"
                        });
                });

            modelBuilder.Entity("VeganCounter.Entities.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("CarboValue")
                        .HasColumnType("float");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("FatValue")
                        .HasColumnType("float");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Kcal")
                        .HasColumnType("float");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProteinValue")
                        .HasColumnType("float");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarboValue = 30.0,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9059),
                            FatValue = 10.0,
                            FoodName = "Vegan Yulaf Ezmesi",
                            Kcal = 300.0,
                            Picture = "noodle_stir_fry.jpg",
                            ProteinValue = 8.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 2,
                            CarboValue = 35.0,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9061),
                            FatValue = 10.0,
                            FoodName = "Vegan Fındıklı Muzlu Ekmek",
                            Kcal = 210.0,
                            Picture = "vegan_lentil_curry.jpg",
                            ProteinValue = 15.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 3,
                            CarboValue = 25.0,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9063),
                            FatValue = 11.0,
                            FoodName = "Vegan Gözleme",
                            Kcal = 210.0,
                            Picture = "vegan_chickpea_salad.jpg",
                            ProteinValue = 7.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 4,
                            CarboValue = 35.0,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9064),
                            FatValue = 13.0,
                            FoodName = "Vegan Kuruyemiş veYulaf Müsli",
                            Kcal = 350.0,
                            Picture = "",
                            ProteinValue = 9.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 5,
                            CarboValue = 20.0,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9065),
                            FatValue = 10.0,
                            FoodName = "Vegan Smoothie Kasesi",
                            Kcal = 350.0,
                            Picture = "vegan_stuffed_peppers.jpg",
                            ProteinValue = 15.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 6,
                            CarboValue = 16.0,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9066),
                            FatValue = 10.0,
                            FoodName = "Vegan Omlet",
                            Kcal = 350.0,
                            Picture = "vegan_stuffed_peppers.jpg",
                            ProteinValue = 15.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 7,
                            CarboValue = 20.0,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9067),
                            FatValue = 10.0,
                            FoodName = "Chia Tohumlu Puding",
                            Kcal = 350.0,
                            Picture = "vegan_stuffed_peppers.jpg",
                            ProteinValue = 15.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 8,
                            CarboValue = 2.0,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9073),
                            FatValue = 10.0,
                            FoodName = "Vegan Kavrulmuş Tofu",
                            Kcal = 160.0,
                            Picture = "vegan_smoked_tofu.jpg",
                            ProteinValue = 18.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 9,
                            CarboValue = 8.0,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9075),
                            FatValue = 12.0,
                            FoodName = "Vegan Cashew Cheese",
                            Kcal = 150.0,
                            Picture = "vegan_cashew_cheese.jpg",
                            ProteinValue = 5.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 10,
                            CarboValue = 10.0,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9076),
                            FatValue = 15.0,
                            FoodName = "Vegan Seitan Sausages",
                            Kcal = 250.0,
                            Picture = "vegan_seitan_sausages.jpg",
                            ProteinValue = 20.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 11,
                            CarboValue = 5.0,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9077),
                            FatValue = 8.0,
                            FoodName = "Vegan Tempeh Bacon",
                            Kcal = 180.0,
                            Picture = "vegan_tempeh_bacon.jpg",
                            ProteinValue = 15.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 12,
                            CarboValue = 25.0,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9079),
                            FatValue = 6.0,
                            FoodName = "Vegan Smoky Tofu Sandwich",
                            Kcal = 220.0,
                            Picture = "vegan_smoky_tofu_sandwich.jpg",
                            ProteinValue = 12.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 13,
                            CarboValue = 15.0,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9083),
                            FatValue = 7.0,
                            FoodName = "Tahin Soslu Izgara Patlıcan",
                            Kcal = 150.0,
                            Picture = "grilled_eggplant.jpg",
                            ProteinValue = 5.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 14,
                            CarboValue = 20.0,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9084),
                            FatValue = 5.0,
                            FoodName = "Vegan Zucchini Fritters",
                            Kcal = 180.0,
                            Picture = "vegan_zucchini_fritters.jpg",
                            ProteinValue = 8.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 15,
                            CarboValue = 12.0,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9085),
                            FatValue = 4.0,
                            FoodName = "Vegan Roasted Cauliflower",
                            Kcal = 120.0,
                            Picture = "vegan_roasted_cauliflower.jpg",
                            ProteinValue = 6.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 16,
                            CarboValue = 18.0,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9087),
                            FatValue = 5.0,
                            FoodName = "Vegan Spinach Stuffed Mushrooms",
                            Kcal = 150.0,
                            Picture = "vegan_spinach_stuffed_mushrooms.jpg",
                            ProteinValue = 7.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 17,
                            CarboValue = 40.0,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9127),
                            FatValue = 5.0,
                            FoodName = "Karışık Meyve Smoothie Kasesi",
                            Kcal = 220.0,
                            Picture = "mixed_berry_smoothie_bowl.jpg",
                            ProteinValue = 8.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 18,
                            CarboValue = 30.0,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9128),
                            FatValue = 0.0,
                            FoodName = "Vegan Mango Sorbet",
                            Kcal = 120.0,
                            Picture = "vegan_mango_sorbet.jpg",
                            ProteinValue = 2.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 19,
                            CarboValue = 15.0,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9130),
                            FatValue = 0.0,
                            FoodName = "Vegan Kiwi Strawberry Popsicles",
                            Kcal = 70.0,
                            Picture = "vegan_kiwi_strawberry_popsicles.jpg",
                            ProteinValue = 1.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 20,
                            CarboValue = 25.0,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9131),
                            FatValue = 1.0,
                            FoodName = "Vegan Fruit Salad",
                            Kcal = 100.0,
                            Picture = "vegan_fruit_salad.jpg",
                            ProteinValue = 3.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 21,
                            CarboValue = 30.0,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9132),
                            FatValue = 5.0,
                            FoodName = "Vegan Banana Pancakes",
                            Kcal = 200.0,
                            Picture = "vegan_banana_pancakes.jpg",
                            ProteinValue = 6.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 22,
                            CarboValue = 10.0,
                            CategoryID = 5,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9136),
                            FatValue = 0.0,
                            FoodName = "Salatalık Nane Limonatası",
                            Kcal = 50.0,
                            Picture = "cucumber_mint_lemonade.jpg",
                            ProteinValue = 1.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 23,
                            CarboValue = 15.0,
                            CategoryID = 5,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9137),
                            FatValue = 0.0,
                            FoodName = "Vegan Çilekli Limonata",
                            Kcal = 60.0,
                            Picture = "vegan_strawberry_lemonade.jpg",
                            ProteinValue = 1.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 24,
                            CarboValue = 20.0,
                            CategoryID = 5,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9138),
                            FatValue = 2.0,
                            FoodName = "Vegan Pineapple Hindistan Cevizli Smoothie",
                            Kcal = 90.0,
                            Picture = "vegan_pineapple_coconut_smoothie.jpg",
                            ProteinValue = 3.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 25,
                            CarboValue = 12.0,
                            CategoryID = 5,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9140),
                            FatValue = 1.0,
                            FoodName = "Vegan Green Detox ",
                            Kcal = 70.0,
                            Picture = "vegan_green_detox_juice.jpg",
                            ProteinValue = 2.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 26,
                            CarboValue = 25.0,
                            CategoryID = 5,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9141),
                            FatValue = 3.0,
                            FoodName = "Vegan Iced Coffee",
                            Kcal = 120.0,
                            Picture = "vegan_iced_coffee.jpg",
                            ProteinValue = 1.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 27,
                            CarboValue = 20.0,
                            CategoryID = 6,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9143),
                            FatValue = 6.0,
                            FoodName = "Nohutlu Vegan Kinoa Salatası",
                            Kcal = 180.0,
                            Picture = "mediterranean_quinoa_salad.jpg",
                            ProteinValue = 10.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 28,
                            CarboValue = 15.0,
                            CategoryID = 6,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9144),
                            FatValue = 10.0,
                            FoodName = "Vegan Greek Salad",
                            Kcal = 160.0,
                            Picture = "vegan_greek_salad.jpg",
                            ProteinValue = 8.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 29,
                            CarboValue = 10.0,
                            CategoryID = 6,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9146),
                            FatValue = 15.0,
                            FoodName = "Vegan Avocado Caprese Salad",
                            Kcal = 170.0,
                            Picture = "vegan_avocado_caprese_salad.jpg",
                            ProteinValue = 6.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 30,
                            CarboValue = 12.0,
                            CategoryID = 6,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9147),
                            FatValue = 8.0,
                            FoodName = "Vegan Caesar Salad",
                            Kcal = 140.0,
                            Picture = "vegan_caesar_salad.jpg",
                            ProteinValue = 5.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 31,
                            CarboValue = 18.0,
                            CategoryID = 6,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9148),
                            FatValue = 5.0,
                            FoodName = "Vegan Coleslaw",
                            Kcal = 120.0,
                            Picture = "vegan_coleslaw.jpg",
                            ProteinValue = 3.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 32,
                            CarboValue = 20.0,
                            CategoryID = 7,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9150),
                            FatValue = 10.0,
                            FoodName = "Vegan Çikolatalı Parça Kurabiye",
                            Kcal = 180.0,
                            Picture = "vegan_chocolate_chip_cookies.jpg",
                            ProteinValue = 4.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 33,
                            CarboValue = 25.0,
                            CategoryID = 7,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9152),
                            FatValue = 12.0,
                            FoodName = "Vegan Brownie",
                            Kcal = 200.0,
                            Picture = "vegan_brownie.jpg",
                            ProteinValue = 5.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 34,
                            CarboValue = 30.0,
                            CategoryID = 7,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9153),
                            FatValue = 15.0,
                            FoodName = "Vegan Çikolatalı Kek",
                            Kcal = 220.0,
                            Picture = "vegan_chocolate_cake.jpg",
                            ProteinValue = 6.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 35,
                            CarboValue = 22.0,
                            CategoryID = 7,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9154),
                            FatValue = 10.0,
                            FoodName = "Vegan Havuçlu Kek",
                            Kcal = 180.0,
                            Picture = "vegan_carrot_cupcakes.jpg",
                            ProteinValue = 4.0,
                            State = "Created"
                        },
                        new
                        {
                            Id = 36,
                            CarboValue = 18.0,
                            CategoryID = 7,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(9155),
                            FatValue = 14.0,
                            FoodName = "Vegan Raspberry Cheesecake",
                            Kcal = 240.0,
                            Picture = "vegan_raspberry_cheesecake.jpg",
                            ProteinValue = 7.0,
                            State = "Created"
                        });
                });

            modelBuilder.Entity("VeganCounter.Entities.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MealType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(8763),
                            MealType = "Kahvaltı",
                            State = "Created"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(8764),
                            MealType = "Öğle Yemeği",
                            State = "Created"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(8765),
                            MealType = "Akşam Yemeği",
                            State = "Created"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(8766),
                            MealType = "Ara Öğün",
                            State = "Created"
                        });
                });

            modelBuilder.Entity("VeganCounter.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DailyMessageId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DailyMessageId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDay = new DateTime(1990, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(8370),
                            Email = "admin@admin.com",
                            Gender = "Male",
                            Password = "Admin",
                            Role = "Admin",
                            State = "Created",
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            BirthDay = new DateTime(1990, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(8379),
                            Email = "user1@user.com",
                            Gender = "Female",
                            Password = "User1.",
                            Role = "StandartUser",
                            State = "Created",
                            UserName = "User1"
                        },
                        new
                        {
                            Id = 3,
                            BirthDay = new DateTime(1990, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(8381),
                            Email = "user2@user.com",
                            Gender = "Female",
                            Password = "User2.",
                            Role = "StandartUser",
                            State = "Created",
                            UserName = "User2"
                        },
                        new
                        {
                            Id = 4,
                            BirthDay = new DateTime(1990, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(8383),
                            Email = "user3@user.com",
                            Gender = "Female",
                            Password = "User3.",
                            Role = "StandartUser",
                            State = "Created",
                            UserName = "User3"
                        },
                        new
                        {
                            Id = 5,
                            BirthDay = new DateTime(1990, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(8384),
                            Email = "user4@user.com",
                            Gender = "Female",
                            Password = "User4.",
                            Role = "StandartUser",
                            State = "Created",
                            UserName = "User4"
                        },
                        new
                        {
                            Id = 6,
                            BirthDay = new DateTime(1990, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 9, 15, 11, 45, 12, 797, DateTimeKind.Local).AddTicks(8385),
                            Email = "user5@user.com",
                            Gender = "Female",
                            Password = "User5.",
                            Role = "StandartUser",
                            State = "Created",
                            UserName = "User5"
                        });
                });

            modelBuilder.Entity("AddedFoodUser", b =>
                {
                    b.HasOne("VeganCounter.Entities.AddedFood", null)
                        .WithMany()
                        .HasForeignKey("AddedFoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeganCounter.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FoodMeal", b =>
                {
                    b.HasOne("VeganCounter.Entities.Food", null)
                        .WithMany()
                        .HasForeignKey("FoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeganCounter.Entities.Meal", null)
                        .WithMany()
                        .HasForeignKey("MealsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MealUser", b =>
                {
                    b.HasOne("VeganCounter.Entities.Meal", null)
                        .WithMany()
                        .HasForeignKey("MealsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeganCounter.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VeganCounter.Entities.Category", b =>
                {
                    b.HasOne("VeganCounter.Entities.Food", "Food")
                        .WithMany("Categories")
                        .HasForeignKey("FoodId");

                    b.Navigation("Food");
                });

            modelBuilder.Entity("VeganCounter.Entities.User", b =>
                {
                    b.HasOne("VeganCounter.Entities.DailyMessage", "DailyMessage")
                        .WithMany("Users")
                        .HasForeignKey("DailyMessageId");

                    b.Navigation("DailyMessage");
                });

            modelBuilder.Entity("VeganCounter.Entities.DailyMessage", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("VeganCounter.Entities.Food", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
